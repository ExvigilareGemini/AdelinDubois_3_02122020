@mixin section_creation($box_param_mixin) {
  @each $section, $param in $box_param_mixin {
    .#{$section} {
      height: map-get($map: $param, $key: param_height);
      background-color: map-get($map: $param, $key: param_color);
      margin: map-get($map: $param, $key: param_margin);
    }
  }
}

// Centrage des enfants avec flexbox -> flex-direction : column
@mixin flex_centered_column {
  display: flex;
  flex-direction: column;
  align-items: center;
}

// Centrage des enfants avec flexbox -> flex-direction : row
@mixin flex_centered_row {
  display: flex;
  justify-content: center;
  align-items: center;
}

// Centrage avec flex_centered_column + alignement du titre à gauche
@mixin flex_centered_HeadLeft {
  @include flex_centered_column;
  justify-content: space-evenly;
  &__head {
    align-self: flex-start;
    margin-left: 20px;
  }
} 

// Centrage avec flex_centered_row + alignement du titre à gauche
@mixin flex_wrapping {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-evenly;
} 

// Création d'un cadre limitant la taille d'une image à contenir pour affichage (pin, preview,...)
@mixin cadre ($height: 100%, $width: 100%) {
  overflow: hidden;
  height: $height;
  width: $width;
}

// Utilisé avec la mixin cadre (ci dessus) en tant que container
// Réajustement de l'image au cadre
@mixin objet_fit {
  object-fit: cover;
  width: inherit;
  height: inherit;
}

@mixin shadow ($version: 0) {
  
  @if $version == 1 {
    box-shadow: 0px 3px 3px 0px rgba(0,0,0,0.1) inset;
  }
  @else if $version == 2 {
    box-shadow: 0 0px 15px rgba(0, 0, 0, 0.1);
  }
  @else {
    box-shadow: 0 5px 8px rgba(0, 0, 0, 0.2);
  }
}

@mixin tablet_pc_format {
  @media screen and (min-width: map-get($map: $breakpoints, $key: tablet)) {
    @content;
  }
}